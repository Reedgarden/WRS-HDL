---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Routing Table Unit (RTU)
---------------------------------------------------------------------------------------
-- File           : wrsw_rtu_wb_20ports.vhd
-- Author         : auto-generated by wbgen2 from wrsw_rtu_wb.wb
-- Created        : Tue Mar  6 10:01:01 2012
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wrsw_rtu_wb.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wbgen2_pkg.all;

entity wrsw_rtu_wb is
  port (
    rst_n_i                                  : in     std_logic;
    wb_clk_i                                 : in     std_logic;
    wb_addr_i                                : in     std_logic_vector(13 downto 0);
    wb_data_i                                : in     std_logic_vector(31 downto 0);
    wb_data_o                                : out    std_logic_vector(31 downto 0);
    wb_cyc_i                                 : in     std_logic;
    wb_sel_i                                 : in     std_logic_vector(3 downto 0);
    wb_stb_i                                 : in     std_logic;
    wb_we_i                                  : in     std_logic;
    wb_ack_o                                 : out    std_logic;
    wb_irq_o                                 : out    std_logic;
    clk_match_i                              : in     std_logic;
-- Port for asynchronous (clock: clk_match_i) BIT field: 'RTU Global Enable' in reg: 'RTU Global Control Register'
    rtu_gcr_g_ena_o                          : out    std_logic;
-- Ports for asynchronous (clock: clk_match_i) RW/RW BIT field: 'MFIFO Trigger' in reg: 'RTU Global Control Register'
    rtu_gcr_mfifotrig_o                      : out    std_logic;
    rtu_gcr_mfifotrig_i                      : in     std_logic;
    rtu_gcr_mfifotrig_load_o                 : out    std_logic;
-- Port for asynchronous (clock: clk_match_i) std_logic_vector field: 'Hash Poly' in reg: 'RTU Global Control Register'
    rtu_gcr_poly_val_o                       : out    std_logic_vector(15 downto 0);
    irq_nempty_i                             : in     std_logic;
-- FIFO write request
    rtu_ufifo_wr_req_i                       : in     std_logic;
-- FIFO full flag
    rtu_ufifo_wr_full_o                      : out    std_logic;
-- FIFO empty flag
    rtu_ufifo_wr_empty_o                     : out    std_logic;
    rtu_ufifo_dmac_lo_i                      : in     std_logic_vector(31 downto 0);
    rtu_ufifo_dmac_hi_i                      : in     std_logic_vector(15 downto 0);
    rtu_ufifo_smac_lo_i                      : in     std_logic_vector(31 downto 0);
    rtu_ufifo_smac_hi_i                      : in     std_logic_vector(15 downto 0);
    rtu_ufifo_vid_i                          : in     std_logic_vector(11 downto 0);
    rtu_ufifo_prio_i                         : in     std_logic_vector(2 downto 0);
    rtu_ufifo_pid_i                          : in     std_logic_vector(3 downto 0);
    rtu_ufifo_has_vid_i                      : in     std_logic;
    rtu_ufifo_has_prio_i                     : in     std_logic;
-- Ports for RAM: Aging bitmap for main hashtable
    rtu_aram_main_addr_i                     : in     std_logic_vector(7 downto 0);
-- Read data output
    rtu_aram_main_data_o                     : out    std_logic_vector(31 downto 0);
-- Read strobe input (active high)
    rtu_aram_main_rd_i                       : in     std_logic;
-- Write data input
    rtu_aram_main_data_i                     : in     std_logic_vector(31 downto 0);
-- Write strobe (active high)
    rtu_aram_main_wr_i                       : in     std_logic;
-- Ports for RAM: VLAN table (VLAN_TAB)
    rtu_vlan_tab_addr_i                      : in     std_logic_vector(11 downto 0);
-- Read data output
    rtu_vlan_tab_data_o                      : out    std_logic_vector(31 downto 0);
-- Read strobe input (active high)
    rtu_vlan_tab_rd_i                        : in     std_logic;
-- Port for std_logic_vector field: 'Aging register value' in reg: 'Aging register for HCAM'
    rtu_agr_hcam_o                           : out    std_logic_vector(31 downto 0);
    rtu_agr_hcam_i                           : in     std_logic_vector(31 downto 0);
    rtu_agr_hcam_load_o                      : out    std_logic;
-- FIFO read request
    rtu_mfifo_rd_req_i                       : in     std_logic;
-- FIFO empty flag
    rtu_mfifo_rd_empty_o                     : out    std_logic;
-- FIFO number of used words
    rtu_mfifo_rd_usedw_o                     : out    std_logic_vector(5 downto 0);
    rtu_mfifo_ad_sel_o                       : out    std_logic;
    rtu_mfifo_ad_val_o                       : out    std_logic_vector(31 downto 0);
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 0'
    rtu_pcr0_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 0'
    rtu_pcr0_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 0'
    rtu_pcr0_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 0'
    rtu_pcr0_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 0'
    rtu_pcr0_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 0'
    rtu_pcr0_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 1'
    rtu_pcr1_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 1'
    rtu_pcr1_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 1'
    rtu_pcr1_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 1'
    rtu_pcr1_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 1'
    rtu_pcr1_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 1'
    rtu_pcr1_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 2'
    rtu_pcr2_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 2'
    rtu_pcr2_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 2'
    rtu_pcr2_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 2'
    rtu_pcr2_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 2'
    rtu_pcr2_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 2'
    rtu_pcr2_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 3'
    rtu_pcr3_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 3'
    rtu_pcr3_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 3'
    rtu_pcr3_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 3'
    rtu_pcr3_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 3'
    rtu_pcr3_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 3'
    rtu_pcr3_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 4'
    rtu_pcr4_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 4'
    rtu_pcr4_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 4'
    rtu_pcr4_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 4'
    rtu_pcr4_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 4'
    rtu_pcr4_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 4'
    rtu_pcr4_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 5'
    rtu_pcr5_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 5'
    rtu_pcr5_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 5'
    rtu_pcr5_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 5'
    rtu_pcr5_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 5'
    rtu_pcr5_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 5'
    rtu_pcr5_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 6'
    rtu_pcr6_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 6'
    rtu_pcr6_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 6'
    rtu_pcr6_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 6'
    rtu_pcr6_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 6'
    rtu_pcr6_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 6'
    rtu_pcr6_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 7'
    rtu_pcr7_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 7'
    rtu_pcr7_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 7'
    rtu_pcr7_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 7'
    rtu_pcr7_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 7'
    rtu_pcr7_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 7'
    rtu_pcr7_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 8'
    rtu_pcr8_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 8'
    rtu_pcr8_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 8'
    rtu_pcr8_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 8'
    rtu_pcr8_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 8'
    rtu_pcr8_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 8'
    rtu_pcr8_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 9'
    rtu_pcr9_learn_en_o                      : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 9'
    rtu_pcr9_pass_all_o                      : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 9'
    rtu_pcr9_pass_bpdu_o                     : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 9'
    rtu_pcr9_fix_prio_o                      : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 9'
    rtu_pcr9_prio_val_o                      : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 9'
    rtu_pcr9_b_unrec_o                       : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 10'
    rtu_pcr10_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 10'
    rtu_pcr10_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 10'
    rtu_pcr10_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 10'
    rtu_pcr10_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 10'
    rtu_pcr10_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 10'
    rtu_pcr10_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 11'
    rtu_pcr11_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 11'
    rtu_pcr11_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 11'
    rtu_pcr11_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 11'
    rtu_pcr11_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 11'
    rtu_pcr11_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 11'
    rtu_pcr11_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 12'
    rtu_pcr12_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 12'
    rtu_pcr12_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 12'
    rtu_pcr12_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 12'
    rtu_pcr12_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 12'
    rtu_pcr12_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 12'
    rtu_pcr12_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 13'
    rtu_pcr13_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 13'
    rtu_pcr13_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 13'
    rtu_pcr13_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 13'
    rtu_pcr13_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 13'
    rtu_pcr13_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 13'
    rtu_pcr13_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 14'
    rtu_pcr14_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 14'
    rtu_pcr14_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 14'
    rtu_pcr14_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 14'
    rtu_pcr14_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 14'
    rtu_pcr14_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 14'
    rtu_pcr14_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 15'
    rtu_pcr15_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 15'
    rtu_pcr15_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 15'
    rtu_pcr15_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 15'
    rtu_pcr15_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 15'
    rtu_pcr15_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 15'
    rtu_pcr15_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 16'
    rtu_pcr16_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 16'
    rtu_pcr16_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 16'
    rtu_pcr16_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 16'
    rtu_pcr16_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 16'
    rtu_pcr16_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 16'
    rtu_pcr16_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 17'
    rtu_pcr17_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 17'
    rtu_pcr17_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 17'
    rtu_pcr17_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 17'
    rtu_pcr17_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 17'
    rtu_pcr17_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 17'
    rtu_pcr17_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 18'
    rtu_pcr18_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 18'
    rtu_pcr18_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 18'
    rtu_pcr18_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 18'
    rtu_pcr18_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 18'
    rtu_pcr18_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 18'
    rtu_pcr18_b_unrec_o                      : out    std_logic;
-- Port for BIT field: 'Learning enable' in reg: 'Port Control Register 19'
    rtu_pcr19_learn_en_o                     : out    std_logic;
-- Port for BIT field: 'Pass all packets' in reg: 'Port Control Register 19'
    rtu_pcr19_pass_all_o                     : out    std_logic;
-- Port for BIT field: 'Pass BPDUs' in reg: 'Port Control Register 19'
    rtu_pcr19_pass_bpdu_o                    : out    std_logic;
-- Port for BIT field: 'Fix priority' in reg: 'Port Control Register 19'
    rtu_pcr19_fix_prio_o                     : out    std_logic;
-- Port for std_logic_vector field: 'Priority value' in reg: 'Port Control Register 19'
    rtu_pcr19_prio_val_o                     : out    std_logic_vector(2 downto 0);
-- Port for BIT field: 'Unrecognized request behaviour' in reg: 'Port Control Register 19'
    rtu_pcr19_b_unrec_o                      : out    std_logic
  );
end wrsw_rtu_wb;

architecture syn of wrsw_rtu_wb is

signal rtu_gcr_g_ena_int                        : std_logic      ;
signal rtu_gcr_g_ena_sync0                      : std_logic      ;
signal rtu_gcr_g_ena_sync1                      : std_logic      ;
signal rtu_gcr_mfifotrig_int_read               : std_logic      ;
signal rtu_gcr_mfifotrig_int_write              : std_logic      ;
signal rtu_gcr_mfifotrig_lw                     : std_logic      ;
signal rtu_gcr_mfifotrig_lw_delay               : std_logic      ;
signal rtu_gcr_mfifotrig_lw_read_in_progress    : std_logic      ;
signal rtu_gcr_mfifotrig_lw_s0                  : std_logic      ;
signal rtu_gcr_mfifotrig_lw_s1                  : std_logic      ;
signal rtu_gcr_mfifotrig_lw_s2                  : std_logic      ;
signal rtu_gcr_mfifotrig_rwsel                  : std_logic      ;
signal rtu_gcr_poly_val_int                     : std_logic_vector(15 downto 0);
signal rtu_gcr_poly_val_swb                     : std_logic      ;
signal rtu_gcr_poly_val_swb_delay               : std_logic      ;
signal rtu_gcr_poly_val_swb_s0                  : std_logic      ;
signal rtu_gcr_poly_val_swb_s1                  : std_logic      ;
signal rtu_gcr_poly_val_swb_s2                  : std_logic      ;
signal rtu_ufifo_in_int                         : std_logic_vector(116 downto 0);
signal rtu_ufifo_out_int                        : std_logic_vector(116 downto 0);
signal rtu_ufifo_rdreq_int                      : std_logic      ;
signal rtu_ufifo_rdreq_int_d0                   : std_logic      ;
signal rtu_aram_main_rddata_int                 : std_logic_vector(31 downto 0);
signal rtu_aram_main_rd_int                     : std_logic      ;
signal rtu_aram_main_wr_int                     : std_logic      ;
signal rtu_vlan_tab_rddata_int                  : std_logic_vector(31 downto 0);
signal rtu_vlan_tab_rd_int                      : std_logic      ;
signal rtu_vlan_tab_wr_int                      : std_logic      ;
signal rtu_mfifo_in_int                         : std_logic_vector(32 downto 0);
signal rtu_mfifo_out_int                        : std_logic_vector(32 downto 0);
signal rtu_mfifo_wrreq_int                      : std_logic      ;
signal rtu_pcr0_learn_en_int                    : std_logic      ;
signal rtu_pcr0_pass_all_int                    : std_logic      ;
signal rtu_pcr0_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr0_fix_prio_int                    : std_logic      ;
signal rtu_pcr0_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr0_b_unrec_int                     : std_logic      ;
signal rtu_pcr1_learn_en_int                    : std_logic      ;
signal rtu_pcr1_pass_all_int                    : std_logic      ;
signal rtu_pcr1_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr1_fix_prio_int                    : std_logic      ;
signal rtu_pcr1_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr1_b_unrec_int                     : std_logic      ;
signal rtu_pcr2_learn_en_int                    : std_logic      ;
signal rtu_pcr2_pass_all_int                    : std_logic      ;
signal rtu_pcr2_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr2_fix_prio_int                    : std_logic      ;
signal rtu_pcr2_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr2_b_unrec_int                     : std_logic      ;
signal rtu_pcr3_learn_en_int                    : std_logic      ;
signal rtu_pcr3_pass_all_int                    : std_logic      ;
signal rtu_pcr3_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr3_fix_prio_int                    : std_logic      ;
signal rtu_pcr3_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr3_b_unrec_int                     : std_logic      ;
signal rtu_pcr4_learn_en_int                    : std_logic      ;
signal rtu_pcr4_pass_all_int                    : std_logic      ;
signal rtu_pcr4_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr4_fix_prio_int                    : std_logic      ;
signal rtu_pcr4_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr4_b_unrec_int                     : std_logic      ;
signal rtu_pcr5_learn_en_int                    : std_logic      ;
signal rtu_pcr5_pass_all_int                    : std_logic      ;
signal rtu_pcr5_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr5_fix_prio_int                    : std_logic      ;
signal rtu_pcr5_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr5_b_unrec_int                     : std_logic      ;
signal rtu_pcr6_learn_en_int                    : std_logic      ;
signal rtu_pcr6_pass_all_int                    : std_logic      ;
signal rtu_pcr6_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr6_fix_prio_int                    : std_logic      ;
signal rtu_pcr6_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr6_b_unrec_int                     : std_logic      ;
signal rtu_pcr7_learn_en_int                    : std_logic      ;
signal rtu_pcr7_pass_all_int                    : std_logic      ;
signal rtu_pcr7_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr7_fix_prio_int                    : std_logic      ;
signal rtu_pcr7_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr7_b_unrec_int                     : std_logic      ;
signal rtu_pcr8_learn_en_int                    : std_logic      ;
signal rtu_pcr8_pass_all_int                    : std_logic      ;
signal rtu_pcr8_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr8_fix_prio_int                    : std_logic      ;
signal rtu_pcr8_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr8_b_unrec_int                     : std_logic      ;
signal rtu_pcr9_learn_en_int                    : std_logic      ;
signal rtu_pcr9_pass_all_int                    : std_logic      ;
signal rtu_pcr9_pass_bpdu_int                   : std_logic      ;
signal rtu_pcr9_fix_prio_int                    : std_logic      ;
signal rtu_pcr9_prio_val_int                    : std_logic_vector(2 downto 0);
signal rtu_pcr9_b_unrec_int                     : std_logic      ;
signal rtu_pcr10_learn_en_int                   : std_logic      ;
signal rtu_pcr10_pass_all_int                   : std_logic      ;
signal rtu_pcr10_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr10_fix_prio_int                   : std_logic      ;
signal rtu_pcr10_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr10_b_unrec_int                    : std_logic      ;
signal rtu_pcr11_learn_en_int                   : std_logic      ;
signal rtu_pcr11_pass_all_int                   : std_logic      ;
signal rtu_pcr11_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr11_fix_prio_int                   : std_logic      ;
signal rtu_pcr11_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr11_b_unrec_int                    : std_logic      ;
signal rtu_pcr12_learn_en_int                   : std_logic      ;
signal rtu_pcr12_pass_all_int                   : std_logic      ;
signal rtu_pcr12_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr12_fix_prio_int                   : std_logic      ;
signal rtu_pcr12_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr12_b_unrec_int                    : std_logic      ;
signal rtu_pcr13_learn_en_int                   : std_logic      ;
signal rtu_pcr13_pass_all_int                   : std_logic      ;
signal rtu_pcr13_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr13_fix_prio_int                   : std_logic      ;
signal rtu_pcr13_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr13_b_unrec_int                    : std_logic      ;
signal rtu_pcr14_learn_en_int                   : std_logic      ;
signal rtu_pcr14_pass_all_int                   : std_logic      ;
signal rtu_pcr14_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr14_fix_prio_int                   : std_logic      ;
signal rtu_pcr14_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr14_b_unrec_int                    : std_logic      ;
signal rtu_pcr15_learn_en_int                   : std_logic      ;
signal rtu_pcr15_pass_all_int                   : std_logic      ;
signal rtu_pcr15_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr15_fix_prio_int                   : std_logic      ;
signal rtu_pcr15_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr15_b_unrec_int                    : std_logic      ;
signal rtu_pcr16_learn_en_int                   : std_logic      ;
signal rtu_pcr16_pass_all_int                   : std_logic      ;
signal rtu_pcr16_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr16_fix_prio_int                   : std_logic      ;
signal rtu_pcr16_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr16_b_unrec_int                    : std_logic      ;
signal rtu_pcr17_learn_en_int                   : std_logic      ;
signal rtu_pcr17_pass_all_int                   : std_logic      ;
signal rtu_pcr17_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr17_fix_prio_int                   : std_logic      ;
signal rtu_pcr17_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr17_b_unrec_int                    : std_logic      ;
signal rtu_pcr18_learn_en_int                   : std_logic      ;
signal rtu_pcr18_pass_all_int                   : std_logic      ;
signal rtu_pcr18_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr18_fix_prio_int                   : std_logic      ;
signal rtu_pcr18_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr18_b_unrec_int                    : std_logic      ;
signal rtu_pcr19_learn_en_int                   : std_logic      ;
signal rtu_pcr19_pass_all_int                   : std_logic      ;
signal rtu_pcr19_pass_bpdu_int                  : std_logic      ;
signal rtu_pcr19_fix_prio_int                   : std_logic      ;
signal rtu_pcr19_prio_val_int                   : std_logic_vector(2 downto 0);
signal rtu_pcr19_b_unrec_int                    : std_logic      ;
signal eic_idr_int                              : std_logic_vector(0 downto 0);
signal eic_idr_write_int                        : std_logic      ;
signal eic_ier_int                              : std_logic_vector(0 downto 0);
signal eic_ier_write_int                        : std_logic      ;
signal eic_imr_int                              : std_logic_vector(0 downto 0);
signal eic_isr_clear_int                        : std_logic_vector(0 downto 0);
signal eic_isr_status_int                       : std_logic_vector(0 downto 0);
signal eic_irq_ack_int                          : std_logic_vector(0 downto 0);
signal eic_isr_write_int                        : std_logic      ;
signal rtu_ufifo_empty_int                      : std_logic      ;
signal rtu_ufifo_usedw_int                      : std_logic_vector(6 downto 0);
signal rtu_mfifo_full_int                       : std_logic      ;
signal rtu_mfifo_empty_int                      : std_logic      ;
signal rtu_mfifo_usedw_int                      : std_logic_vector(5 downto 0);
signal irq_inputs_vector_int                    : std_logic_vector(0 downto 0);
signal ack_sreg                                 : std_logic_vector(9 downto 0);
signal rddata_reg                               : std_logic_vector(31 downto 0);
signal wrdata_reg                               : std_logic_vector(31 downto 0);
signal bwsel_reg                                : std_logic_vector(3 downto 0);
signal rwaddr_reg                               : std_logic_vector(13 downto 0);
signal ack_in_progress                          : std_logic      ;
signal wr_int                                   : std_logic      ;
signal rd_int                                   : std_logic      ;
signal bus_clock_int                            : std_logic      ;
signal allones                                  : std_logic_vector(31 downto 0);
signal allzeros                                 : std_logic_vector(31 downto 0);

begin
-- Some internal signals assignments. For (foreseen) compatibility with other bus standards.
  wrdata_reg <= wb_data_i;
  bwsel_reg <= wb_sel_i;
  bus_clock_int <= wb_clk_i;
  rd_int <= wb_cyc_i and (wb_stb_i and (not wb_we_i));
  wr_int <= wb_cyc_i and (wb_stb_i and wb_we_i);
  allones <= (others => '1');
  allzeros <= (others => '0');
-- 
-- Main register bank access process.
  process (bus_clock_int, rst_n_i)
  begin
    if (rst_n_i = '0') then 
      ack_sreg <= "0000000000";
      ack_in_progress <= '0';
      rddata_reg <= "00000000000000000000000000000000";
      rtu_gcr_g_ena_int <= '0';
      rtu_gcr_mfifotrig_lw <= '0';
      rtu_gcr_mfifotrig_lw_delay <= '0';
      rtu_gcr_mfifotrig_lw_read_in_progress <= '0';
      rtu_gcr_mfifotrig_rwsel <= '0';
      rtu_gcr_mfifotrig_int_write <= '0';
      rtu_gcr_poly_val_int <= "0000000000000000";
      rtu_gcr_poly_val_swb <= '0';
      rtu_gcr_poly_val_swb_delay <= '0';
      rtu_agr_hcam_load_o <= '0';
      rtu_pcr0_learn_en_int <= '0';
      rtu_pcr0_pass_all_int <= '0';
      rtu_pcr0_pass_bpdu_int <= '0';
      rtu_pcr0_fix_prio_int <= '0';
      rtu_pcr0_prio_val_int <= "000";
      rtu_pcr0_b_unrec_int <= '0';
      rtu_pcr1_learn_en_int <= '0';
      rtu_pcr1_pass_all_int <= '0';
      rtu_pcr1_pass_bpdu_int <= '0';
      rtu_pcr1_fix_prio_int <= '0';
      rtu_pcr1_prio_val_int <= "000";
      rtu_pcr1_b_unrec_int <= '0';
      rtu_pcr2_learn_en_int <= '0';
      rtu_pcr2_pass_all_int <= '0';
      rtu_pcr2_pass_bpdu_int <= '0';
      rtu_pcr2_fix_prio_int <= '0';
      rtu_pcr2_prio_val_int <= "000";
      rtu_pcr2_b_unrec_int <= '0';
      rtu_pcr3_learn_en_int <= '0';
      rtu_pcr3_pass_all_int <= '0';
      rtu_pcr3_pass_bpdu_int <= '0';
      rtu_pcr3_fix_prio_int <= '0';
      rtu_pcr3_prio_val_int <= "000";
      rtu_pcr3_b_unrec_int <= '0';
      rtu_pcr4_learn_en_int <= '0';
      rtu_pcr4_pass_all_int <= '0';
      rtu_pcr4_pass_bpdu_int <= '0';
      rtu_pcr4_fix_prio_int <= '0';
      rtu_pcr4_prio_val_int <= "000";
      rtu_pcr4_b_unrec_int <= '0';
      rtu_pcr5_learn_en_int <= '0';
      rtu_pcr5_pass_all_int <= '0';
      rtu_pcr5_pass_bpdu_int <= '0';
      rtu_pcr5_fix_prio_int <= '0';
      rtu_pcr5_prio_val_int <= "000";
      rtu_pcr5_b_unrec_int <= '0';
      rtu_pcr6_learn_en_int <= '0';
      rtu_pcr6_pass_all_int <= '0';
      rtu_pcr6_pass_bpdu_int <= '0';
      rtu_pcr6_fix_prio_int <= '0';
      rtu_pcr6_prio_val_int <= "000";
      rtu_pcr6_b_unrec_int <= '0';
      rtu_pcr7_learn_en_int <= '0';
      rtu_pcr7_pass_all_int <= '0';
      rtu_pcr7_pass_bpdu_int <= '0';
      rtu_pcr7_fix_prio_int <= '0';
      rtu_pcr7_prio_val_int <= "000";
      rtu_pcr7_b_unrec_int <= '0';
      rtu_pcr8_learn_en_int <= '0';
      rtu_pcr8_pass_all_int <= '0';
      rtu_pcr8_pass_bpdu_int <= '0';
      rtu_pcr8_fix_prio_int <= '0';
      rtu_pcr8_prio_val_int <= "000";
      rtu_pcr8_b_unrec_int <= '0';
      rtu_pcr9_learn_en_int <= '0';
      rtu_pcr9_pass_all_int <= '0';
      rtu_pcr9_pass_bpdu_int <= '0';
      rtu_pcr9_fix_prio_int <= '0';
      rtu_pcr9_prio_val_int <= "000";
      rtu_pcr9_b_unrec_int <= '0';
      rtu_pcr10_learn_en_int <= '0';
      rtu_pcr10_pass_all_int <= '0';
      rtu_pcr10_pass_bpdu_int <= '0';
      rtu_pcr10_fix_prio_int <= '0';
      rtu_pcr10_prio_val_int <= "000";
      rtu_pcr10_b_unrec_int <= '0';
      rtu_pcr11_learn_en_int <= '0';
      rtu_pcr11_pass_all_int <= '0';
      rtu_pcr11_pass_bpdu_int <= '0';
      rtu_pcr11_fix_prio_int <= '0';
      rtu_pcr11_prio_val_int <= "000";
      rtu_pcr11_b_unrec_int <= '0';
      rtu_pcr12_learn_en_int <= '0';
      rtu_pcr12_pass_all_int <= '0';
      rtu_pcr12_pass_bpdu_int <= '0';
      rtu_pcr12_fix_prio_int <= '0';
      rtu_pcr12_prio_val_int <= "000";
      rtu_pcr12_b_unrec_int <= '0';
      rtu_pcr13_learn_en_int <= '0';
      rtu_pcr13_pass_all_int <= '0';
      rtu_pcr13_pass_bpdu_int <= '0';
      rtu_pcr13_fix_prio_int <= '0';
      rtu_pcr13_prio_val_int <= "000";
      rtu_pcr13_b_unrec_int <= '0';
      rtu_pcr14_learn_en_int <= '0';
      rtu_pcr14_pass_all_int <= '0';
      rtu_pcr14_pass_bpdu_int <= '0';
      rtu_pcr14_fix_prio_int <= '0';
      rtu_pcr14_prio_val_int <= "000";
      rtu_pcr14_b_unrec_int <= '0';
      rtu_pcr15_learn_en_int <= '0';
      rtu_pcr15_pass_all_int <= '0';
      rtu_pcr15_pass_bpdu_int <= '0';
      rtu_pcr15_fix_prio_int <= '0';
      rtu_pcr15_prio_val_int <= "000";
      rtu_pcr15_b_unrec_int <= '0';
      rtu_pcr16_learn_en_int <= '0';
      rtu_pcr16_pass_all_int <= '0';
      rtu_pcr16_pass_bpdu_int <= '0';
      rtu_pcr16_fix_prio_int <= '0';
      rtu_pcr16_prio_val_int <= "000";
      rtu_pcr16_b_unrec_int <= '0';
      rtu_pcr17_learn_en_int <= '0';
      rtu_pcr17_pass_all_int <= '0';
      rtu_pcr17_pass_bpdu_int <= '0';
      rtu_pcr17_fix_prio_int <= '0';
      rtu_pcr17_prio_val_int <= "000";
      rtu_pcr17_b_unrec_int <= '0';
      rtu_pcr18_learn_en_int <= '0';
      rtu_pcr18_pass_all_int <= '0';
      rtu_pcr18_pass_bpdu_int <= '0';
      rtu_pcr18_fix_prio_int <= '0';
      rtu_pcr18_prio_val_int <= "000";
      rtu_pcr18_b_unrec_int <= '0';
      rtu_pcr19_learn_en_int <= '0';
      rtu_pcr19_pass_all_int <= '0';
      rtu_pcr19_pass_bpdu_int <= '0';
      rtu_pcr19_fix_prio_int <= '0';
      rtu_pcr19_prio_val_int <= "000";
      rtu_pcr19_b_unrec_int <= '0';
      eic_idr_write_int <= '0';
      eic_ier_write_int <= '0';
      eic_isr_write_int <= '0';
      rtu_ufifo_rdreq_int <= '0';
      rtu_mfifo_wrreq_int <= '0';
    elsif rising_edge(bus_clock_int) then
-- advance the ACK generator shift register
      ack_sreg(8 downto 0) <= ack_sreg(9 downto 1);
      ack_sreg(9) <= '0';
      if (ack_in_progress = '1') then
        if (ack_sreg(0) = '1') then
          rtu_agr_hcam_load_o <= '0';
          eic_idr_write_int <= '0';
          eic_ier_write_int <= '0';
          eic_isr_write_int <= '0';
          rtu_mfifo_wrreq_int <= '0';
          ack_in_progress <= '0';
        else
          rtu_gcr_mfifotrig_lw <= rtu_gcr_mfifotrig_lw_delay;
          rtu_gcr_mfifotrig_lw_delay <= '0';
          if ((ack_sreg(1) = '1') and (rtu_gcr_mfifotrig_lw_read_in_progress = '1')) then
            rddata_reg(1) <= rtu_gcr_mfifotrig_int_read;
            rtu_gcr_mfifotrig_lw_read_in_progress <= '0';
          end if;
          rtu_gcr_poly_val_swb <= rtu_gcr_poly_val_swb_delay;
          rtu_gcr_poly_val_swb_delay <= '0';
          rtu_agr_hcam_load_o <= '0';
        end if;
      else
        if ((wb_cyc_i = '1') and (wb_stb_i = '1')) then
          case rwaddr_reg(13 downto 12) is
          when "00" => 
            case rwaddr_reg(5 downto 0) is
            when "000000" => 
              if (wb_we_i = '1') then
                rtu_gcr_g_ena_int <= wrdata_reg(0);
                rddata_reg(0) <= 'X';
                rddata_reg(1) <= 'X';
                rtu_gcr_mfifotrig_int_write <= wrdata_reg(1);
                rtu_gcr_mfifotrig_lw <= '1';
                rtu_gcr_mfifotrig_lw_delay <= '1';
                rtu_gcr_mfifotrig_lw_read_in_progress <= '0';
                rtu_gcr_mfifotrig_rwsel <= '1';
                rtu_gcr_poly_val_int <= wrdata_reg(23 downto 8);
                rtu_gcr_poly_val_swb <= '1';
                rtu_gcr_poly_val_swb_delay <= '1';
              else
                rddata_reg(0) <= rtu_gcr_g_ena_int;
                rddata_reg(1) <= 'X';
                rtu_gcr_mfifotrig_lw <= '1';
                rtu_gcr_mfifotrig_lw_delay <= '1';
                rtu_gcr_mfifotrig_lw_read_in_progress <= '1';
                rtu_gcr_mfifotrig_rwsel <= '0';
                rddata_reg(23 downto 8) <= rtu_gcr_poly_val_int;
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(5) <= '1';
              ack_in_progress <= '1';
            when "000001" => 
              if (wb_we_i = '1') then
                rtu_agr_hcam_load_o <= '1';
              else
                rddata_reg(31 downto 0) <= rtu_agr_hcam_i;
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000010" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr0_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr0_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr0_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr0_fix_prio_int <= wrdata_reg(3);
                rtu_pcr0_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr0_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr0_learn_en_int;
                rddata_reg(1) <= rtu_pcr0_pass_all_int;
                rddata_reg(2) <= rtu_pcr0_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr0_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr0_prio_val_int;
                rddata_reg(7) <= rtu_pcr0_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000011" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr1_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr1_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr1_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr1_fix_prio_int <= wrdata_reg(3);
                rtu_pcr1_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr1_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr1_learn_en_int;
                rddata_reg(1) <= rtu_pcr1_pass_all_int;
                rddata_reg(2) <= rtu_pcr1_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr1_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr1_prio_val_int;
                rddata_reg(7) <= rtu_pcr1_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000100" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr2_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr2_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr2_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr2_fix_prio_int <= wrdata_reg(3);
                rtu_pcr2_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr2_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr2_learn_en_int;
                rddata_reg(1) <= rtu_pcr2_pass_all_int;
                rddata_reg(2) <= rtu_pcr2_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr2_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr2_prio_val_int;
                rddata_reg(7) <= rtu_pcr2_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000101" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr3_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr3_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr3_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr3_fix_prio_int <= wrdata_reg(3);
                rtu_pcr3_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr3_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr3_learn_en_int;
                rddata_reg(1) <= rtu_pcr3_pass_all_int;
                rddata_reg(2) <= rtu_pcr3_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr3_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr3_prio_val_int;
                rddata_reg(7) <= rtu_pcr3_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000110" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr4_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr4_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr4_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr4_fix_prio_int <= wrdata_reg(3);
                rtu_pcr4_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr4_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr4_learn_en_int;
                rddata_reg(1) <= rtu_pcr4_pass_all_int;
                rddata_reg(2) <= rtu_pcr4_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr4_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr4_prio_val_int;
                rddata_reg(7) <= rtu_pcr4_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "000111" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr5_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr5_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr5_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr5_fix_prio_int <= wrdata_reg(3);
                rtu_pcr5_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr5_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr5_learn_en_int;
                rddata_reg(1) <= rtu_pcr5_pass_all_int;
                rddata_reg(2) <= rtu_pcr5_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr5_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr5_prio_val_int;
                rddata_reg(7) <= rtu_pcr5_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001000" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr6_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr6_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr6_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr6_fix_prio_int <= wrdata_reg(3);
                rtu_pcr6_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr6_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr6_learn_en_int;
                rddata_reg(1) <= rtu_pcr6_pass_all_int;
                rddata_reg(2) <= rtu_pcr6_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr6_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr6_prio_val_int;
                rddata_reg(7) <= rtu_pcr6_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001001" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr7_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr7_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr7_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr7_fix_prio_int <= wrdata_reg(3);
                rtu_pcr7_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr7_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr7_learn_en_int;
                rddata_reg(1) <= rtu_pcr7_pass_all_int;
                rddata_reg(2) <= rtu_pcr7_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr7_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr7_prio_val_int;
                rddata_reg(7) <= rtu_pcr7_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001010" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr8_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr8_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr8_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr8_fix_prio_int <= wrdata_reg(3);
                rtu_pcr8_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr8_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr8_learn_en_int;
                rddata_reg(1) <= rtu_pcr8_pass_all_int;
                rddata_reg(2) <= rtu_pcr8_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr8_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr8_prio_val_int;
                rddata_reg(7) <= rtu_pcr8_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001011" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr9_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr9_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr9_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr9_fix_prio_int <= wrdata_reg(3);
                rtu_pcr9_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr9_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr9_learn_en_int;
                rddata_reg(1) <= rtu_pcr9_pass_all_int;
                rddata_reg(2) <= rtu_pcr9_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr9_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr9_prio_val_int;
                rddata_reg(7) <= rtu_pcr9_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001100" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr10_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr10_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr10_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr10_fix_prio_int <= wrdata_reg(3);
                rtu_pcr10_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr10_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr10_learn_en_int;
                rddata_reg(1) <= rtu_pcr10_pass_all_int;
                rddata_reg(2) <= rtu_pcr10_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr10_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr10_prio_val_int;
                rddata_reg(7) <= rtu_pcr10_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001101" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr11_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr11_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr11_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr11_fix_prio_int <= wrdata_reg(3);
                rtu_pcr11_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr11_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr11_learn_en_int;
                rddata_reg(1) <= rtu_pcr11_pass_all_int;
                rddata_reg(2) <= rtu_pcr11_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr11_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr11_prio_val_int;
                rddata_reg(7) <= rtu_pcr11_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001110" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr12_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr12_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr12_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr12_fix_prio_int <= wrdata_reg(3);
                rtu_pcr12_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr12_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr12_learn_en_int;
                rddata_reg(1) <= rtu_pcr12_pass_all_int;
                rddata_reg(2) <= rtu_pcr12_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr12_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr12_prio_val_int;
                rddata_reg(7) <= rtu_pcr12_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "001111" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr13_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr13_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr13_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr13_fix_prio_int <= wrdata_reg(3);
                rtu_pcr13_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr13_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr13_learn_en_int;
                rddata_reg(1) <= rtu_pcr13_pass_all_int;
                rddata_reg(2) <= rtu_pcr13_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr13_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr13_prio_val_int;
                rddata_reg(7) <= rtu_pcr13_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010000" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr14_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr14_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr14_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr14_fix_prio_int <= wrdata_reg(3);
                rtu_pcr14_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr14_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr14_learn_en_int;
                rddata_reg(1) <= rtu_pcr14_pass_all_int;
                rddata_reg(2) <= rtu_pcr14_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr14_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr14_prio_val_int;
                rddata_reg(7) <= rtu_pcr14_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010001" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr15_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr15_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr15_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr15_fix_prio_int <= wrdata_reg(3);
                rtu_pcr15_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr15_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr15_learn_en_int;
                rddata_reg(1) <= rtu_pcr15_pass_all_int;
                rddata_reg(2) <= rtu_pcr15_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr15_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr15_prio_val_int;
                rddata_reg(7) <= rtu_pcr15_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010010" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr16_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr16_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr16_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr16_fix_prio_int <= wrdata_reg(3);
                rtu_pcr16_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr16_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr16_learn_en_int;
                rddata_reg(1) <= rtu_pcr16_pass_all_int;
                rddata_reg(2) <= rtu_pcr16_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr16_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr16_prio_val_int;
                rddata_reg(7) <= rtu_pcr16_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010011" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr17_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr17_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr17_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr17_fix_prio_int <= wrdata_reg(3);
                rtu_pcr17_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr17_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr17_learn_en_int;
                rddata_reg(1) <= rtu_pcr17_pass_all_int;
                rddata_reg(2) <= rtu_pcr17_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr17_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr17_prio_val_int;
                rddata_reg(7) <= rtu_pcr17_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010100" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr18_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr18_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr18_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr18_fix_prio_int <= wrdata_reg(3);
                rtu_pcr18_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr18_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr18_learn_en_int;
                rddata_reg(1) <= rtu_pcr18_pass_all_int;
                rddata_reg(2) <= rtu_pcr18_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr18_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr18_prio_val_int;
                rddata_reg(7) <= rtu_pcr18_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "010101" => 
              if (wb_we_i = '1') then
                rddata_reg(0) <= 'X';
                rtu_pcr19_learn_en_int <= wrdata_reg(0);
                rddata_reg(1) <= 'X';
                rtu_pcr19_pass_all_int <= wrdata_reg(1);
                rddata_reg(2) <= 'X';
                rtu_pcr19_pass_bpdu_int <= wrdata_reg(2);
                rddata_reg(3) <= 'X';
                rtu_pcr19_fix_prio_int <= wrdata_reg(3);
                rtu_pcr19_prio_val_int <= wrdata_reg(6 downto 4);
                rddata_reg(7) <= 'X';
                rtu_pcr19_b_unrec_int <= wrdata_reg(7);
              else
                rddata_reg(0) <= rtu_pcr19_learn_en_int;
                rddata_reg(1) <= rtu_pcr19_pass_all_int;
                rddata_reg(2) <= rtu_pcr19_pass_bpdu_int;
                rddata_reg(3) <= rtu_pcr19_fix_prio_int;
                rddata_reg(6 downto 4) <= rtu_pcr19_prio_val_int;
                rddata_reg(7) <= rtu_pcr19_b_unrec_int;
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011000" => 
              if (wb_we_i = '1') then
                eic_idr_write_int <= '1';
              else
                rddata_reg(0) <= 'X';
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011001" => 
              if (wb_we_i = '1') then
                eic_ier_write_int <= '1';
              else
                rddata_reg(0) <= 'X';
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011010" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(0) <= eic_imr_int(0);
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011011" => 
              if (wb_we_i = '1') then
                eic_isr_write_int <= '1';
              else
                rddata_reg(0) <= eic_isr_status_int(0);
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011100" => 
              if (wb_we_i = '1') then
              else
                if (rtu_ufifo_rdreq_int_d0 = '0') then
                  rtu_ufifo_rdreq_int <= not rtu_ufifo_rdreq_int;
                else
                  rddata_reg(31 downto 0) <= rtu_ufifo_out_int(31 downto 0);
                  ack_in_progress <= '1';
                  ack_sreg(0) <= '1';
                end if;
              end if;
            when "011101" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(15 downto 0) <= rtu_ufifo_out_int(47 downto 32);
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011110" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(31 downto 0) <= rtu_ufifo_out_int(79 downto 48);
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "011111" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(15 downto 0) <= rtu_ufifo_out_int(95 downto 80);
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "100000" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(11 downto 0) <= rtu_ufifo_out_int(107 downto 96);
                rddata_reg(14 downto 12) <= rtu_ufifo_out_int(110 downto 108);
                rddata_reg(19 downto 16) <= rtu_ufifo_out_int(114 downto 111);
                rddata_reg(20) <= rtu_ufifo_out_int(115);
                rddata_reg(21) <= rtu_ufifo_out_int(116);
                rddata_reg(15) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "100001" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(17) <= rtu_ufifo_empty_int;
                rddata_reg(6 downto 0) <= rtu_ufifo_usedw_int;
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "100010" => 
              if (wb_we_i = '1') then
                rtu_mfifo_in_int(0) <= wrdata_reg(0);
              else
                rddata_reg(0) <= 'X';
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "100011" => 
              if (wb_we_i = '1') then
                rtu_mfifo_in_int(32 downto 1) <= wrdata_reg(31 downto 0);
                rtu_mfifo_wrreq_int <= '1';
              else
                rddata_reg(0) <= 'X';
                rddata_reg(1) <= 'X';
                rddata_reg(2) <= 'X';
                rddata_reg(3) <= 'X';
                rddata_reg(4) <= 'X';
                rddata_reg(5) <= 'X';
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(16) <= 'X';
                rddata_reg(17) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when "100100" => 
              if (wb_we_i = '1') then
              else
                rddata_reg(16) <= rtu_mfifo_full_int;
                rddata_reg(17) <= rtu_mfifo_empty_int;
                rddata_reg(5 downto 0) <= rtu_mfifo_usedw_int;
                rddata_reg(6) <= 'X';
                rddata_reg(7) <= 'X';
                rddata_reg(8) <= 'X';
                rddata_reg(9) <= 'X';
                rddata_reg(10) <= 'X';
                rddata_reg(11) <= 'X';
                rddata_reg(12) <= 'X';
                rddata_reg(13) <= 'X';
                rddata_reg(14) <= 'X';
                rddata_reg(15) <= 'X';
                rddata_reg(18) <= 'X';
                rddata_reg(19) <= 'X';
                rddata_reg(20) <= 'X';
                rddata_reg(21) <= 'X';
                rddata_reg(22) <= 'X';
                rddata_reg(23) <= 'X';
                rddata_reg(24) <= 'X';
                rddata_reg(25) <= 'X';
                rddata_reg(26) <= 'X';
                rddata_reg(27) <= 'X';
                rddata_reg(28) <= 'X';
                rddata_reg(29) <= 'X';
                rddata_reg(30) <= 'X';
                rddata_reg(31) <= 'X';
              end if;
              ack_sreg(0) <= '1';
              ack_in_progress <= '1';
            when others =>
-- prevent the slave from hanging the bus on invalid address
              ack_in_progress <= '1';
              ack_sreg(0) <= '1';
            end case;
          when "01" => 
            if (rd_int = '1') then
              ack_sreg(0) <= '1';
            else
              ack_sreg(0) <= '1';
            end if;
            ack_in_progress <= '1';
          when "10" => 
            if (rd_int = '1') then
              ack_sreg(0) <= '1';
            else
              ack_sreg(0) <= '1';
            end if;
            ack_in_progress <= '1';
          when others =>
-- prevent the slave from hanging the bus on invalid address
            ack_in_progress <= '1';
            ack_sreg(0) <= '1';
          end case;
        end if;
      end if;
    end if;
  end process;
  
  
-- Data output multiplexer process
  process (rddata_reg, rwaddr_reg, rtu_aram_main_rddata_int, rtu_vlan_tab_rddata_int, wb_addr_i  )
  begin
    case rwaddr_reg(13 downto 12) is
    when "01" => 
      wb_data_o(31 downto 0) <= rtu_aram_main_rddata_int;
    when "10" => 
      wb_data_o(31 downto 0) <= rtu_vlan_tab_rddata_int;
    when others =>
      wb_data_o <= rddata_reg;
    end case;
  end process;
  
  
-- Read & write lines decoder for RAMs
  process (wb_addr_i, rd_int, wr_int  )
  begin
    if (wb_addr_i(13 downto 12) = "01") then
      rtu_aram_main_rd_int <= rd_int;
      rtu_aram_main_wr_int <= wr_int;
    else
      rtu_aram_main_wr_int <= '0';
      rtu_aram_main_rd_int <= '0';
    end if;
    if (wb_addr_i(13 downto 12) = "10") then
      rtu_vlan_tab_rd_int <= rd_int;
      rtu_vlan_tab_wr_int <= wr_int;
    else
      rtu_vlan_tab_wr_int <= '0';
      rtu_vlan_tab_rd_int <= '0';
    end if;
  end process;
  
  
-- RTU Global Enable
-- synchronizer chain for field : RTU Global Enable (type RW/RO, bus_clock_int <-> clk_match_i)
  process (clk_match_i, rst_n_i)
  begin
    if (rst_n_i = '0') then 
      rtu_gcr_g_ena_o <= '0';
      rtu_gcr_g_ena_sync0 <= '0';
      rtu_gcr_g_ena_sync1 <= '0';
    elsif rising_edge(clk_match_i) then
      rtu_gcr_g_ena_sync0 <= rtu_gcr_g_ena_int;
      rtu_gcr_g_ena_sync1 <= rtu_gcr_g_ena_sync0;
      rtu_gcr_g_ena_o <= rtu_gcr_g_ena_sync1;
    end if;
  end process;
  
  
-- MFIFO Trigger
-- asynchronous BIT register : MFIFO Trigger (type RW/WO, clk_match_i <-> bus_clock_int)
  process (clk_match_i, rst_n_i)
  begin
    if (rst_n_i = '0') then 
      rtu_gcr_mfifotrig_lw_s0 <= '0';
      rtu_gcr_mfifotrig_lw_s1 <= '0';
      rtu_gcr_mfifotrig_lw_s2 <= '0';
      rtu_gcr_mfifotrig_int_read <= '0';
      rtu_gcr_mfifotrig_load_o <= '0';
      rtu_gcr_mfifotrig_o <= '0';
    elsif rising_edge(clk_match_i) then
      rtu_gcr_mfifotrig_lw_s0 <= rtu_gcr_mfifotrig_lw;
      rtu_gcr_mfifotrig_lw_s1 <= rtu_gcr_mfifotrig_lw_s0;
      rtu_gcr_mfifotrig_lw_s2 <= rtu_gcr_mfifotrig_lw_s1;
      if ((rtu_gcr_mfifotrig_lw_s2 = '0') and (rtu_gcr_mfifotrig_lw_s1 = '1')) then
        if (rtu_gcr_mfifotrig_rwsel = '1') then
          rtu_gcr_mfifotrig_o <= rtu_gcr_mfifotrig_int_write;
          rtu_gcr_mfifotrig_load_o <= '1';
        else
          rtu_gcr_mfifotrig_load_o <= '0';
          rtu_gcr_mfifotrig_int_read <= rtu_gcr_mfifotrig_i;
        end if;
      else
        rtu_gcr_mfifotrig_load_o <= '0';
      end if;
    end if;
  end process;
  
  
-- Hash Poly
-- asynchronous std_logic_vector register : Hash Poly (type RW/RO, clk_match_i <-> bus_clock_int)
  process (clk_match_i, rst_n_i)
  begin
    if (rst_n_i = '0') then 
      rtu_gcr_poly_val_swb_s0 <= '0';
      rtu_gcr_poly_val_swb_s1 <= '0';
      rtu_gcr_poly_val_swb_s2 <= '0';
      rtu_gcr_poly_val_o <= "0000000000000000";
    elsif rising_edge(clk_match_i) then
      rtu_gcr_poly_val_swb_s0 <= rtu_gcr_poly_val_swb;
      rtu_gcr_poly_val_swb_s1 <= rtu_gcr_poly_val_swb_s0;
      rtu_gcr_poly_val_swb_s2 <= rtu_gcr_poly_val_swb_s1;
      if ((rtu_gcr_poly_val_swb_s2 = '0') and (rtu_gcr_poly_val_swb_s1 = '1')) then
        rtu_gcr_poly_val_o <= rtu_gcr_poly_val_int;
      end if;
    end if;
  end process;
  
  
-- extra code for reg/fifo/mem: Unrecognized request FIFO (UFIFO)
  rtu_ufifo_in_int(31 downto 0) <= rtu_ufifo_dmac_lo_i;
  rtu_ufifo_in_int(47 downto 32) <= rtu_ufifo_dmac_hi_i;
  rtu_ufifo_in_int(79 downto 48) <= rtu_ufifo_smac_lo_i;
  rtu_ufifo_in_int(95 downto 80) <= rtu_ufifo_smac_hi_i;
  rtu_ufifo_in_int(107 downto 96) <= rtu_ufifo_vid_i;
  rtu_ufifo_in_int(110 downto 108) <= rtu_ufifo_prio_i;
  rtu_ufifo_in_int(114 downto 111) <= rtu_ufifo_pid_i;
  rtu_ufifo_in_int(115) <= rtu_ufifo_has_vid_i;
  rtu_ufifo_in_int(116) <= rtu_ufifo_has_prio_i;
  rtu_ufifo_INST : wbgen2_fifo_sync
    generic map (
      g_size               => 128,
      g_width              => 117,
      g_usedw_size         => 7
    )
    port map (
      wr_req_i             => rtu_ufifo_wr_req_i,
      wr_full_o            => rtu_ufifo_wr_full_o,
      wr_empty_o           => rtu_ufifo_wr_empty_o,
      rd_full_o            => open,
      rd_empty_o           => rtu_ufifo_empty_int,
      rd_usedw_o           => rtu_ufifo_usedw_int,
      rd_req_i             => rtu_ufifo_rdreq_int,
      clk_i                => bus_clock_int,
      wr_data_i            => rtu_ufifo_in_int,
      rd_data_o            => rtu_ufifo_out_int
    );
  
-- extra code for reg/fifo/mem: Aging bitmap for main hashtable
-- RAM block instantiation for memory: Aging bitmap for main hashtable
  rtu_aram_main_raminst : wbgen2_dpssram
    generic map (
      g_data_width         => 32,
      g_size               => 256,
      g_addr_width         => 8,
      g_dual_clock         => false,
      g_use_bwsel          => false
    )
    port map (
      clk_a_i              => bus_clock_int,
      clk_b_i              => bus_clock_int,
      addr_b_i             => rtu_aram_main_addr_i,
      addr_a_i             => rwaddr_reg(7 downto 0),
      data_b_o             => rtu_aram_main_data_o,
      rd_b_i               => rtu_aram_main_rd_i,
      data_b_i             => rtu_aram_main_data_i,
      wr_b_i               => rtu_aram_main_wr_i,
      bwsel_b_i            => allones(3 downto 0),
      data_a_o             => rtu_aram_main_rddata_int(31 downto 0),
      rd_a_i               => rtu_aram_main_rd_int,
      data_a_i             => wrdata_reg(31 downto 0),
      wr_a_i               => rtu_aram_main_wr_int,
      bwsel_a_i            => allones(3 downto 0)
    );
  
-- extra code for reg/fifo/mem: VLAN table (VLAN_TAB)
-- RAM block instantiation for memory: VLAN table (VLAN_TAB)
  rtu_vlan_tab_raminst : wbgen2_dpssram
    generic map (
      g_data_width         => 32,
      g_size               => 4096,
      g_addr_width         => 12,
      g_dual_clock         => false,
      g_use_bwsel          => false
    )
    port map (
      clk_a_i              => bus_clock_int,
      clk_b_i              => bus_clock_int,
      addr_b_i             => rtu_vlan_tab_addr_i,
      addr_a_i             => rwaddr_reg(11 downto 0),
      data_b_o             => rtu_vlan_tab_data_o,
      rd_b_i               => rtu_vlan_tab_rd_i,
      bwsel_b_i            => allones(3 downto 0),
      data_b_i             => allzeros(31 downto 0),
      wr_b_i               => allzeros(0),
      data_a_o             => rtu_vlan_tab_rddata_int(31 downto 0),
      rd_a_i               => rtu_vlan_tab_rd_int,
      data_a_i             => wrdata_reg(31 downto 0),
      wr_a_i               => rtu_vlan_tab_wr_int,
      bwsel_a_i            => allones(3 downto 0)
    );
  
-- Aging register value
  rtu_agr_hcam_o <= wrdata_reg(31 downto 0);
-- extra code for reg/fifo/mem: Main hashtable CPU access FIFO (MFIFO)
  rtu_mfifo_ad_sel_o <= rtu_mfifo_out_int(0);
  rtu_mfifo_ad_val_o <= rtu_mfifo_out_int(32 downto 1);
  rtu_mfifo_INST : wbgen2_fifo_async
    generic map (
      g_size               => 64,
      g_width              => 33,
      g_usedw_size         => 6
    )
    port map (
      rd_req_i             => rtu_mfifo_rd_req_i,
      rd_empty_o           => rtu_mfifo_rd_empty_o,
      rd_usedw_o           => rtu_mfifo_rd_usedw_o,
      wr_full_o            => rtu_mfifo_full_int,
      wr_empty_o           => rtu_mfifo_empty_int,
      wr_usedw_o           => rtu_mfifo_usedw_int,
      wr_req_i             => rtu_mfifo_wrreq_int,
      rd_clk_i             => clk_match_i,
      wr_clk_i             => bus_clock_int,
      wr_data_i            => rtu_mfifo_in_int,
      rd_data_o            => rtu_mfifo_out_int
    );
  
-- Learning enable
  rtu_pcr0_learn_en_o <= rtu_pcr0_learn_en_int;
-- Pass all packets
  rtu_pcr0_pass_all_o <= rtu_pcr0_pass_all_int;
-- Pass BPDUs
  rtu_pcr0_pass_bpdu_o <= rtu_pcr0_pass_bpdu_int;
-- Fix priority
  rtu_pcr0_fix_prio_o <= rtu_pcr0_fix_prio_int;
-- Priority value
  rtu_pcr0_prio_val_o <= rtu_pcr0_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr0_b_unrec_o <= rtu_pcr0_b_unrec_int;
-- Learning enable
  rtu_pcr1_learn_en_o <= rtu_pcr1_learn_en_int;
-- Pass all packets
  rtu_pcr1_pass_all_o <= rtu_pcr1_pass_all_int;
-- Pass BPDUs
  rtu_pcr1_pass_bpdu_o <= rtu_pcr1_pass_bpdu_int;
-- Fix priority
  rtu_pcr1_fix_prio_o <= rtu_pcr1_fix_prio_int;
-- Priority value
  rtu_pcr1_prio_val_o <= rtu_pcr1_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr1_b_unrec_o <= rtu_pcr1_b_unrec_int;
-- Learning enable
  rtu_pcr2_learn_en_o <= rtu_pcr2_learn_en_int;
-- Pass all packets
  rtu_pcr2_pass_all_o <= rtu_pcr2_pass_all_int;
-- Pass BPDUs
  rtu_pcr2_pass_bpdu_o <= rtu_pcr2_pass_bpdu_int;
-- Fix priority
  rtu_pcr2_fix_prio_o <= rtu_pcr2_fix_prio_int;
-- Priority value
  rtu_pcr2_prio_val_o <= rtu_pcr2_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr2_b_unrec_o <= rtu_pcr2_b_unrec_int;
-- Learning enable
  rtu_pcr3_learn_en_o <= rtu_pcr3_learn_en_int;
-- Pass all packets
  rtu_pcr3_pass_all_o <= rtu_pcr3_pass_all_int;
-- Pass BPDUs
  rtu_pcr3_pass_bpdu_o <= rtu_pcr3_pass_bpdu_int;
-- Fix priority
  rtu_pcr3_fix_prio_o <= rtu_pcr3_fix_prio_int;
-- Priority value
  rtu_pcr3_prio_val_o <= rtu_pcr3_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr3_b_unrec_o <= rtu_pcr3_b_unrec_int;
-- Learning enable
  rtu_pcr4_learn_en_o <= rtu_pcr4_learn_en_int;
-- Pass all packets
  rtu_pcr4_pass_all_o <= rtu_pcr4_pass_all_int;
-- Pass BPDUs
  rtu_pcr4_pass_bpdu_o <= rtu_pcr4_pass_bpdu_int;
-- Fix priority
  rtu_pcr4_fix_prio_o <= rtu_pcr4_fix_prio_int;
-- Priority value
  rtu_pcr4_prio_val_o <= rtu_pcr4_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr4_b_unrec_o <= rtu_pcr4_b_unrec_int;
-- Learning enable
  rtu_pcr5_learn_en_o <= rtu_pcr5_learn_en_int;
-- Pass all packets
  rtu_pcr5_pass_all_o <= rtu_pcr5_pass_all_int;
-- Pass BPDUs
  rtu_pcr5_pass_bpdu_o <= rtu_pcr5_pass_bpdu_int;
-- Fix priority
  rtu_pcr5_fix_prio_o <= rtu_pcr5_fix_prio_int;
-- Priority value
  rtu_pcr5_prio_val_o <= rtu_pcr5_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr5_b_unrec_o <= rtu_pcr5_b_unrec_int;
-- Learning enable
  rtu_pcr6_learn_en_o <= rtu_pcr6_learn_en_int;
-- Pass all packets
  rtu_pcr6_pass_all_o <= rtu_pcr6_pass_all_int;
-- Pass BPDUs
  rtu_pcr6_pass_bpdu_o <= rtu_pcr6_pass_bpdu_int;
-- Fix priority
  rtu_pcr6_fix_prio_o <= rtu_pcr6_fix_prio_int;
-- Priority value
  rtu_pcr6_prio_val_o <= rtu_pcr6_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr6_b_unrec_o <= rtu_pcr6_b_unrec_int;
-- Learning enable
  rtu_pcr7_learn_en_o <= rtu_pcr7_learn_en_int;
-- Pass all packets
  rtu_pcr7_pass_all_o <= rtu_pcr7_pass_all_int;
-- Pass BPDUs
  rtu_pcr7_pass_bpdu_o <= rtu_pcr7_pass_bpdu_int;
-- Fix priority
  rtu_pcr7_fix_prio_o <= rtu_pcr7_fix_prio_int;
-- Priority value
  rtu_pcr7_prio_val_o <= rtu_pcr7_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr7_b_unrec_o <= rtu_pcr7_b_unrec_int;
-- Learning enable
  rtu_pcr8_learn_en_o <= rtu_pcr8_learn_en_int;
-- Pass all packets
  rtu_pcr8_pass_all_o <= rtu_pcr8_pass_all_int;
-- Pass BPDUs
  rtu_pcr8_pass_bpdu_o <= rtu_pcr8_pass_bpdu_int;
-- Fix priority
  rtu_pcr8_fix_prio_o <= rtu_pcr8_fix_prio_int;
-- Priority value
  rtu_pcr8_prio_val_o <= rtu_pcr8_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr8_b_unrec_o <= rtu_pcr8_b_unrec_int;
-- Learning enable
  rtu_pcr9_learn_en_o <= rtu_pcr9_learn_en_int;
-- Pass all packets
  rtu_pcr9_pass_all_o <= rtu_pcr9_pass_all_int;
-- Pass BPDUs
  rtu_pcr9_pass_bpdu_o <= rtu_pcr9_pass_bpdu_int;
-- Fix priority
  rtu_pcr9_fix_prio_o <= rtu_pcr9_fix_prio_int;
-- Priority value
  rtu_pcr9_prio_val_o <= rtu_pcr9_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr9_b_unrec_o <= rtu_pcr9_b_unrec_int;
-- Learning enable
  rtu_pcr10_learn_en_o <= rtu_pcr10_learn_en_int;
-- Pass all packets
  rtu_pcr10_pass_all_o <= rtu_pcr10_pass_all_int;
-- Pass BPDUs
  rtu_pcr10_pass_bpdu_o <= rtu_pcr10_pass_bpdu_int;
-- Fix priority
  rtu_pcr10_fix_prio_o <= rtu_pcr10_fix_prio_int;
-- Priority value
  rtu_pcr10_prio_val_o <= rtu_pcr10_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr10_b_unrec_o <= rtu_pcr10_b_unrec_int;
-- Learning enable
  rtu_pcr11_learn_en_o <= rtu_pcr11_learn_en_int;
-- Pass all packets
  rtu_pcr11_pass_all_o <= rtu_pcr11_pass_all_int;
-- Pass BPDUs
  rtu_pcr11_pass_bpdu_o <= rtu_pcr11_pass_bpdu_int;
-- Fix priority
  rtu_pcr11_fix_prio_o <= rtu_pcr11_fix_prio_int;
-- Priority value
  rtu_pcr11_prio_val_o <= rtu_pcr11_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr11_b_unrec_o <= rtu_pcr11_b_unrec_int;
-- Learning enable
  rtu_pcr12_learn_en_o <= rtu_pcr12_learn_en_int;
-- Pass all packets
  rtu_pcr12_pass_all_o <= rtu_pcr12_pass_all_int;
-- Pass BPDUs
  rtu_pcr12_pass_bpdu_o <= rtu_pcr12_pass_bpdu_int;
-- Fix priority
  rtu_pcr12_fix_prio_o <= rtu_pcr12_fix_prio_int;
-- Priority value
  rtu_pcr12_prio_val_o <= rtu_pcr12_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr12_b_unrec_o <= rtu_pcr12_b_unrec_int;
-- Learning enable
  rtu_pcr13_learn_en_o <= rtu_pcr13_learn_en_int;
-- Pass all packets
  rtu_pcr13_pass_all_o <= rtu_pcr13_pass_all_int;
-- Pass BPDUs
  rtu_pcr13_pass_bpdu_o <= rtu_pcr13_pass_bpdu_int;
-- Fix priority
  rtu_pcr13_fix_prio_o <= rtu_pcr13_fix_prio_int;
-- Priority value
  rtu_pcr13_prio_val_o <= rtu_pcr13_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr13_b_unrec_o <= rtu_pcr13_b_unrec_int;
-- Learning enable
  rtu_pcr14_learn_en_o <= rtu_pcr14_learn_en_int;
-- Pass all packets
  rtu_pcr14_pass_all_o <= rtu_pcr14_pass_all_int;
-- Pass BPDUs
  rtu_pcr14_pass_bpdu_o <= rtu_pcr14_pass_bpdu_int;
-- Fix priority
  rtu_pcr14_fix_prio_o <= rtu_pcr14_fix_prio_int;
-- Priority value
  rtu_pcr14_prio_val_o <= rtu_pcr14_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr14_b_unrec_o <= rtu_pcr14_b_unrec_int;
-- Learning enable
  rtu_pcr15_learn_en_o <= rtu_pcr15_learn_en_int;
-- Pass all packets
  rtu_pcr15_pass_all_o <= rtu_pcr15_pass_all_int;
-- Pass BPDUs
  rtu_pcr15_pass_bpdu_o <= rtu_pcr15_pass_bpdu_int;
-- Fix priority
  rtu_pcr15_fix_prio_o <= rtu_pcr15_fix_prio_int;
-- Priority value
  rtu_pcr15_prio_val_o <= rtu_pcr15_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr15_b_unrec_o <= rtu_pcr15_b_unrec_int;
-- Learning enable
  rtu_pcr16_learn_en_o <= rtu_pcr16_learn_en_int;
-- Pass all packets
  rtu_pcr16_pass_all_o <= rtu_pcr16_pass_all_int;
-- Pass BPDUs
  rtu_pcr16_pass_bpdu_o <= rtu_pcr16_pass_bpdu_int;
-- Fix priority
  rtu_pcr16_fix_prio_o <= rtu_pcr16_fix_prio_int;
-- Priority value
  rtu_pcr16_prio_val_o <= rtu_pcr16_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr16_b_unrec_o <= rtu_pcr16_b_unrec_int;
-- Learning enable
  rtu_pcr17_learn_en_o <= rtu_pcr17_learn_en_int;
-- Pass all packets
  rtu_pcr17_pass_all_o <= rtu_pcr17_pass_all_int;
-- Pass BPDUs
  rtu_pcr17_pass_bpdu_o <= rtu_pcr17_pass_bpdu_int;
-- Fix priority
  rtu_pcr17_fix_prio_o <= rtu_pcr17_fix_prio_int;
-- Priority value
  rtu_pcr17_prio_val_o <= rtu_pcr17_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr17_b_unrec_o <= rtu_pcr17_b_unrec_int;
-- Learning enable
  rtu_pcr18_learn_en_o <= rtu_pcr18_learn_en_int;
-- Pass all packets
  rtu_pcr18_pass_all_o <= rtu_pcr18_pass_all_int;
-- Pass BPDUs
  rtu_pcr18_pass_bpdu_o <= rtu_pcr18_pass_bpdu_int;
-- Fix priority
  rtu_pcr18_fix_prio_o <= rtu_pcr18_fix_prio_int;
-- Priority value
  rtu_pcr18_prio_val_o <= rtu_pcr18_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr18_b_unrec_o <= rtu_pcr18_b_unrec_int;
-- Learning enable
  rtu_pcr19_learn_en_o <= rtu_pcr19_learn_en_int;
-- Pass all packets
  rtu_pcr19_pass_all_o <= rtu_pcr19_pass_all_int;
-- Pass BPDUs
  rtu_pcr19_pass_bpdu_o <= rtu_pcr19_pass_bpdu_int;
-- Fix priority
  rtu_pcr19_fix_prio_o <= rtu_pcr19_fix_prio_int;
-- Priority value
  rtu_pcr19_prio_val_o <= rtu_pcr19_prio_val_int;
-- Unrecognized request behaviour
  rtu_pcr19_b_unrec_o <= rtu_pcr19_b_unrec_int;
-- extra code for reg/fifo/mem: Interrupt disable register
  eic_idr_int(0) <= wrdata_reg(0);
-- extra code for reg/fifo/mem: Interrupt enable register
  eic_ier_int(0) <= wrdata_reg(0);
-- extra code for reg/fifo/mem: Interrupt status register
  eic_isr_clear_int(0) <= wrdata_reg(0);
-- extra code for reg/fifo/mem: IRQ_CONTROLLER
  eic_irq_controller_inst : wbgen2_eic
    generic map (
      g_num_interrupts     => 1,
      g_irq00_mode         => 2,
      g_irq01_mode         => 0,
      g_irq02_mode         => 0,
      g_irq03_mode         => 0,
      g_irq04_mode         => 0,
      g_irq05_mode         => 0,
      g_irq06_mode         => 0,
      g_irq07_mode         => 0,
      g_irq08_mode         => 0,
      g_irq09_mode         => 0,
      g_irq0a_mode         => 0,
      g_irq0b_mode         => 0,
      g_irq0c_mode         => 0,
      g_irq0d_mode         => 0,
      g_irq0e_mode         => 0,
      g_irq0f_mode         => 0,
      g_irq10_mode         => 0,
      g_irq11_mode         => 0,
      g_irq12_mode         => 0,
      g_irq13_mode         => 0,
      g_irq14_mode         => 0,
      g_irq15_mode         => 0,
      g_irq16_mode         => 0,
      g_irq17_mode         => 0,
      g_irq18_mode         => 0,
      g_irq19_mode         => 0,
      g_irq1a_mode         => 0,
      g_irq1b_mode         => 0,
      g_irq1c_mode         => 0,
      g_irq1d_mode         => 0,
      g_irq1e_mode         => 0,
      g_irq1f_mode         => 0
    )
    port map (
      clk_i                => bus_clock_int,
      rst_n_i              => rst_n_i,
      irq_i                => irq_inputs_vector_int,
      irq_ack_o            => eic_irq_ack_int,
      reg_imr_o            => eic_imr_int,
      reg_ier_i            => eic_ier_int,
      reg_ier_wr_stb_i     => eic_ier_write_int,
      reg_idr_i            => eic_idr_int,
      reg_idr_wr_stb_i     => eic_idr_write_int,
      reg_isr_o            => eic_isr_status_int,
      reg_isr_i            => eic_isr_clear_int,
      reg_isr_wr_stb_i     => eic_isr_write_int,
      wb_irq_o             => wb_irq_o
    );
  
  irq_inputs_vector_int(0) <= irq_nempty_i;
-- extra code for reg/fifo/mem: FIFO 'Unrecognized request FIFO (UFIFO)' data output register 0
  process (bus_clock_int, rst_n_i)
  begin
    if (rst_n_i = '0') then 
      rtu_ufifo_rdreq_int_d0 <= '0';
    elsif rising_edge(bus_clock_int) then
      rtu_ufifo_rdreq_int_d0 <= rtu_ufifo_rdreq_int;
    end if;
  end process;
  
  
-- extra code for reg/fifo/mem: FIFO 'Unrecognized request FIFO (UFIFO)' data output register 1
-- extra code for reg/fifo/mem: FIFO 'Unrecognized request FIFO (UFIFO)' data output register 2
-- extra code for reg/fifo/mem: FIFO 'Unrecognized request FIFO (UFIFO)' data output register 3
-- extra code for reg/fifo/mem: FIFO 'Unrecognized request FIFO (UFIFO)' data output register 4
-- extra code for reg/fifo/mem: FIFO 'Main hashtable CPU access FIFO (MFIFO)' data input register 0
-- extra code for reg/fifo/mem: FIFO 'Main hashtable CPU access FIFO (MFIFO)' data input register 1
  rwaddr_reg <= wb_addr_i;
-- ACK signal generation. Just pass the LSB of ACK counter.
  wb_ack_o <= ack_sreg(0);
end syn;
